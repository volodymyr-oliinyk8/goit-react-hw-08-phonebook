{"version":3,"sources":["pages/Page.module.css","components/ContactForm/ContactForm.module.css","redux/Phonebook/phonebook-operations.js","redux/Phonebook/contacts-selectors.js","components/ContactForm/ContactForm.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","pages/ContactsPage.js"],"names":["module","exports","axios","defaults","baseURL","dispatch","fetchContactsRequest","get","then","data","fetchContactsSuccess","catch","error","fetchContactsError","name","number","contact","addContactRequest","post","addContactSuccess","addContactError","id","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","getContactFilter","state","contacts","filter","getAllContacts","items","getVisibleContacts","createSelector","allContacts","normalizedFilter","toLowerCase","includes","CssTextField","styled","TextField","color","borderBottomColor","borderColor","connect","selectors","onSubmit","operations","useState","setName","setNumber","handleChange","e","currentTarget","value","reset","className","styles","form","preventDefault","options","find","alert","label","type","pattern","title","onChange","Button","variant","onDelete","useDispatch","useEffect","List","sx","width","maxWidth","margin","map","ListItem","disableGutters","secondaryAction","IconButton","onClick","ListItemText","primary","Actions","changeFilter","target","ContactsPage","slyles"],"mappings":"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","file":"static/js/contacts-page.8495ede0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Page_title__3rnhh\",\"form\":\"Page_form__2wmPp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__gr8o2\"};","import axios from 'axios';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './phonebook-actions';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst fetchContacts = () => dispatch => {\n  dispatch(fetchContactsRequest());\n\n  axios\n    .get('/contacts')\n    .then(({ data }) => {\n      //   console.log(data);\n      dispatch(fetchContactsSuccess(data));\n    })\n    .catch(error => dispatch(fetchContactsError(error)));\n};\n\nconst addContact =\n  ({ name, number }) =>\n  dispatch => {\n    const contact = { name, number };\n\n    dispatch(addContactRequest());\n\n    axios\n      .post('/contacts', contact)\n      .then(({ data }) => dispatch(addContactSuccess(data)))\n      .catch(error => dispatch(addContactError(error)));\n  };\n\nconst deleteContact = id => dispatch => {\n  dispatch(deleteContactRequest());\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(deleteContactSuccess(id)))\n    .catch(error => dispatch(deleteContactError(error)));\n};\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { fetchContacts, addContact, deleteContact };\n","import { createSelector } from '@reduxjs/toolkit';\nconst getContactFilter = state => state.contacts.filter;\n\nconst getAllContacts = state => state.contacts.items;\n\nconst getVisibleContacts = createSelector(\n  [getAllContacts, getContactFilter],\n  (allContacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return allContacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { getContactFilter, getVisibleContacts, getAllContacts };\n\n// варіант без мемоізації\n// const getVisibleContacts = state => {\n//   const filter = getAllContacts(state);\n//   const allContacts = getAllContacts(state);\n//   const normalizedFilter = filter.toLowerCase();\n\n//   return allContacts.filter(({ name }) =>\n//     name.toLowerCase().includes(normalizedFilter),\n//   );\n// };\n","import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { operations, selectors } from '../../redux/Phonebook';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport { styled } from '@mui/material/styles';\n\nimport styles from './ContactForm.module.css';\n\nconst CssTextField = styled(TextField)({\n  '& label.Mui-focused': {\n    color: 'white',\n  },\n  '& label': {\n    color: 'seagreen',\n  },\n  '& input': {\n    color: 'white',\n  },\n  '& .MuiInput-underline:after': {\n    borderBottomColor: 'green',\n  },\n  '& .MuiOutlinedInput-root': {\n    '& fieldset': {\n      borderColor: 'seagreen',\n    },\n    '&:hover fieldset': {\n      borderColor: 'yellow',\n    },\n    '&.Mui-focused fieldset': {\n      borderColor: 'white',\n    },\n  },\n});\n\nfunction ContactForm({ onSubmit, contacts }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const options = { name, number };\n    if (\n      contacts.find(\n        contact => name.toLowerCase() === contact.name.toLowerCase(),\n      )\n    ) {\n      alert(`${name} is already in contacts`);\n    } else if (contacts.find(contact => number === contact.number)) {\n      alert(`${number} is already exists`);\n    } else {\n      onSubmit(options);\n    }\n    reset();\n  };\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <CssTextField\n        label=\"Enter name contact\"\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        onChange={handleChange}\n      />\n      <CssTextField\n        id=\"outlined-search\"\n        label=\"Enter number contact\"\n        color=\"secondary\"\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        onChange={handleChange}\n      />\n      <Button variant=\"contained\" type=\"submit\">\n        Add contact\n      </Button>\n    </form>\n  );\n}\n\nconst mapStateToProps = state => ({\n  contacts: selectors.getAllContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: contact => dispatch(operations.addContact(contact)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, connect } from 'react-redux';\nimport { useEffect } from 'react';\nimport { operations, selectors } from 'redux/Phonebook';\n\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nconst ContactsList = ({ contacts, onDelete }) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(operations.fetchContacts());\n  }, [dispatch]);\n  return (\n    <List\n      sx={{\n        width: '60%',\n        maxWidth: 360,\n        margin: '10px auto 0 auto',\n        color: '#0a988f',\n      }}\n    >\n      {contacts.map(({ id, name, number }) => (\n        <ListItem\n          name={name}\n          key={id}\n          disableGutters\n          secondaryAction={\n            <IconButton\n              aria-label=\"delete\"\n              color=\"primary\"\n              onClick={() => onDelete(id)}\n            >\n              <DeleteIcon />\n            </IconButton>\n          }\n        >\n          <ListItemText primary={`${name}: ${number}`} />\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  contacts: selectors.getVisibleContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDelete: id => dispatch(operations.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Actions from '../../redux/Phonebook/phonebook-actions';\nimport { selectors } from '../../redux/Phonebook';\n\nimport TextField from '@mui/material/TextField';\nimport { styled } from '@mui/material/styles';\n\nconst CssTextField = styled(TextField)({\n  '& label.Mui-focused': {\n    color: 'white',\n  },\n  '& label': {\n    color: 'seagreen',\n  },\n  '& input': {\n    color: 'white',\n  },\n  '& .MuiInput-underline:after': {\n    borderBottomColor: 'green',\n  },\n  '& .MuiOutlinedInput-root': {\n    '& fieldset': {\n      borderColor: 'seagreen',\n    },\n    '&:hover fieldset': {\n      borderColor: 'yellow',\n    },\n    '&.Mui-focused fieldset': {\n      borderColor: 'white',\n    },\n  },\n});\n\nconst Filter = ({ value, onChange }) => (\n  <CssTextField\n    type=\"text\"\n    value={value}\n    label=\"Find contacts\"\n    onChange={onChange}\n  />\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\nconst mapStateToProps = state => ({\n  value: selectors.getContactFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(Actions.changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import ContactForm from 'components/ContactForm';\r\nimport ContactsList from 'components/ContactsList';\r\nimport Filter from 'components/Filter';\r\n\r\nimport slyles from './Page.module.css';\r\n\r\nexport default function ContactsPage() {\r\n  return (\r\n    <>\r\n      <h1 className={slyles.title}>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2 className={slyles.title}>Contacts</h2>\r\n      <Filter />\r\n      <ContactsList />\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}